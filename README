Project file structure
==========================
App.js ==> App registration, Redux Provider Container & SafeAreaView is placed. App navigation container and tabs are also defined here.

/src => main source folder
/src/assets => images & fonts
/src/config => global const data is stored.
/src/redux => redux, redux saga, reducer configuration, reducer module files and data helper functions are placed.
/src/ui => Customer faced UI designs and re-usable common components are placed.
/src/util => Util, helper methods we can re-use globally over the app.

Library integrations
=========================
### Navigation library and its dependencies
@react-navigation/bottom-tabs, @react-navigation/native, react-native-safe-area-context, react-native-screens

Note: react-native-screens library is integrated as a solution to compile error (dependency error).
Ref link: https://github.com/react-navigation/react-navigation/issues/9995

### Icons
react-native-vector-icons library integrated for tabbar icons.
I have found a way to export icons from Figma as SVG and load it to "https://icomoon.io" which generates a custom font. Downloaded & registered
this custom font to the app. react-native-vector-icons supports loading custom font from icomoon.

### Custom Fonts
Downloaded ApercuArabicPro fonts and linked to the app.

### HTTP Rest API
axios library is used

### State Management
react-redux, redux, redux-saga libraries integrated

Additional Configuration & Notes
=========================
* App is tested on iPhone8, iPhone12, iPadPro(11-inch), Android Xaomi Mi 10T to make sure design is flexibly matching on different screen sizes & Platforms.
* On IOS portrait only mode is enabled & Ipad support enabled

App WorkFlow
=========================
Clicking second tab (Track) "GET"s Market Data and stored in redux. Spinner is displayed while loading the data first time.
Market data is fetched every 3 seconds with an interval to get updated data on the background without spinner. Interval killed on exit.
Clicking icon next to "Coins" sorts assets by "baseCurrency" ASC / DESC directions.
Clicking icom next to "Price" sorts assets by "price" ASC / DESC direction.
Clicking Add/Remove buttons on Holdings column updates redux state of Holdings arr.
Clicking bottom-right floating button is tied to empty function and does not make any operation.
